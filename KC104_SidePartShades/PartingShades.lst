;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/9/2013 11:48:58 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2AE7      	GOTO       743
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0821      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0820      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
_blinkLights:
;PartingShades.c,29 :: 		void blinkLights(void){  // this is called to simply click the relays
;PartingShades.c,30 :: 		PORTA = 0xFF;
0x000A	0x30FF      	MOVLW      255
0x000B	0x1283      	BCF        STATUS, 5
0x000C	0x1303      	BCF        STATUS, 6
0x000D	0x0085      	MOVWF      PORTA
;PartingShades.c,31 :: 		delay_ms(flashDelay);
0x000E	0x3003      	MOVLW      3
0x000F	0x00FB      	MOVWF      R11
0x0010	0x3008      	MOVLW      8
0x0011	0x00FC      	MOVWF      R12
0x0012	0x3077      	MOVLW      119
0x0013	0x00FD      	MOVWF      R13
L_blinkLights0:
0x0014	0x0BFD      	DECFSZ     R13, 1
0x0015	0x2814      	GOTO       L_blinkLights0
0x0016	0x0BFC      	DECFSZ     R12, 1
0x0017	0x2814      	GOTO       L_blinkLights0
0x0018	0x0BFB      	DECFSZ     R11, 1
0x0019	0x2814      	GOTO       L_blinkLights0
;PartingShades.c,32 :: 		PORTA = 0x00;
0x001A	0x0185      	CLRF       PORTA
;PartingShades.c,33 :: 		delay_ms(flashDelay);
0x001B	0x3003      	MOVLW      3
0x001C	0x00FB      	MOVWF      R11
0x001D	0x3008      	MOVLW      8
0x001E	0x00FC      	MOVWF      R12
0x001F	0x3077      	MOVLW      119
0x0020	0x00FD      	MOVWF      R13
L_blinkLights1:
0x0021	0x0BFD      	DECFSZ     R13, 1
0x0022	0x2821      	GOTO       L_blinkLights1
0x0023	0x0BFC      	DECFSZ     R12, 1
0x0024	0x2821      	GOTO       L_blinkLights1
0x0025	0x0BFB      	DECFSZ     R11, 1
0x0026	0x2821      	GOTO       L_blinkLights1
;PartingShades.c,34 :: 		PORTA = 0xFF;
0x0027	0x30FF      	MOVLW      255
0x0028	0x0085      	MOVWF      PORTA
;PartingShades.c,35 :: 		delay_ms(flashDelay);
0x0029	0x3003      	MOVLW      3
0x002A	0x00FB      	MOVWF      R11
0x002B	0x3008      	MOVLW      8
0x002C	0x00FC      	MOVWF      R12
0x002D	0x3077      	MOVLW      119
0x002E	0x00FD      	MOVWF      R13
L_blinkLights2:
0x002F	0x0BFD      	DECFSZ     R13, 1
0x0030	0x282F      	GOTO       L_blinkLights2
0x0031	0x0BFC      	DECFSZ     R12, 1
0x0032	0x282F      	GOTO       L_blinkLights2
0x0033	0x0BFB      	DECFSZ     R11, 1
0x0034	0x282F      	GOTO       L_blinkLights2
;PartingShades.c,36 :: 		PORTA = 0x00;
0x0035	0x0185      	CLRF       PORTA
;PartingShades.c,37 :: 		delay_ms(flashDelay);
0x0036	0x3003      	MOVLW      3
0x0037	0x00FB      	MOVWF      R11
0x0038	0x3008      	MOVLW      8
0x0039	0x00FC      	MOVWF      R12
0x003A	0x3077      	MOVLW      119
0x003B	0x00FD      	MOVWF      R13
L_blinkLights3:
0x003C	0x0BFD      	DECFSZ     R13, 1
0x003D	0x283C      	GOTO       L_blinkLights3
0x003E	0x0BFC      	DECFSZ     R12, 1
0x003F	0x283C      	GOTO       L_blinkLights3
0x0040	0x0BFB      	DECFSZ     R11, 1
0x0041	0x283C      	GOTO       L_blinkLights3
;PartingShades.c,38 :: 		PORTA = 0xFF;
0x0042	0x30FF      	MOVLW      255
0x0043	0x0085      	MOVWF      PORTA
;PartingShades.c,39 :: 		delay_ms(flashDelay);
0x0044	0x3003      	MOVLW      3
0x0045	0x00FB      	MOVWF      R11
0x0046	0x3008      	MOVLW      8
0x0047	0x00FC      	MOVWF      R12
0x0048	0x3077      	MOVLW      119
0x0049	0x00FD      	MOVWF      R13
L_blinkLights4:
0x004A	0x0BFD      	DECFSZ     R13, 1
0x004B	0x284A      	GOTO       L_blinkLights4
0x004C	0x0BFC      	DECFSZ     R12, 1
0x004D	0x284A      	GOTO       L_blinkLights4
0x004E	0x0BFB      	DECFSZ     R11, 1
0x004F	0x284A      	GOTO       L_blinkLights4
;PartingShades.c,40 :: 		PORTA = 0x00;
0x0050	0x0185      	CLRF       PORTA
;PartingShades.c,41 :: 		delay_ms(flashDelay);
0x0051	0x3003      	MOVLW      3
0x0052	0x00FB      	MOVWF      R11
0x0053	0x3008      	MOVLW      8
0x0054	0x00FC      	MOVWF      R12
0x0055	0x3077      	MOVLW      119
0x0056	0x00FD      	MOVWF      R13
L_blinkLights5:
0x0057	0x0BFD      	DECFSZ     R13, 1
0x0058	0x2857      	GOTO       L_blinkLights5
0x0059	0x0BFC      	DECFSZ     R12, 1
0x005A	0x2857      	GOTO       L_blinkLights5
0x005B	0x0BFB      	DECFSZ     R11, 1
0x005C	0x2857      	GOTO       L_blinkLights5
;PartingShades.c,42 :: 		PORTA = 0xFF;
0x005D	0x30FF      	MOVLW      255
0x005E	0x0085      	MOVWF      PORTA
;PartingShades.c,43 :: 		delay_ms(flashDelay);
0x005F	0x3003      	MOVLW      3
0x0060	0x00FB      	MOVWF      R11
0x0061	0x3008      	MOVLW      8
0x0062	0x00FC      	MOVWF      R12
0x0063	0x3077      	MOVLW      119
0x0064	0x00FD      	MOVWF      R13
L_blinkLights6:
0x0065	0x0BFD      	DECFSZ     R13, 1
0x0066	0x2865      	GOTO       L_blinkLights6
0x0067	0x0BFC      	DECFSZ     R12, 1
0x0068	0x2865      	GOTO       L_blinkLights6
0x0069	0x0BFB      	DECFSZ     R11, 1
0x006A	0x2865      	GOTO       L_blinkLights6
;PartingShades.c,44 :: 		PORTA = 0x00;
0x006B	0x0185      	CLRF       PORTA
;PartingShades.c,45 :: 		delay_ms(flashDelay);
0x006C	0x3003      	MOVLW      3
0x006D	0x00FB      	MOVWF      R11
0x006E	0x3008      	MOVLW      8
0x006F	0x00FC      	MOVWF      R12
0x0070	0x3077      	MOVLW      119
0x0071	0x00FD      	MOVWF      R13
L_blinkLights7:
0x0072	0x0BFD      	DECFSZ     R13, 1
0x0073	0x2872      	GOTO       L_blinkLights7
0x0074	0x0BFC      	DECFSZ     R12, 1
0x0075	0x2872      	GOTO       L_blinkLights7
0x0076	0x0BFB      	DECFSZ     R11, 1
0x0077	0x2872      	GOTO       L_blinkLights7
;PartingShades.c,46 :: 		PORTA = 0xFF;
0x0078	0x30FF      	MOVLW      255
0x0079	0x0085      	MOVWF      PORTA
;PartingShades.c,47 :: 		delay_ms(flashDelay);
0x007A	0x3003      	MOVLW      3
0x007B	0x00FB      	MOVWF      R11
0x007C	0x3008      	MOVLW      8
0x007D	0x00FC      	MOVWF      R12
0x007E	0x3077      	MOVLW      119
0x007F	0x00FD      	MOVWF      R13
L_blinkLights8:
0x0080	0x0BFD      	DECFSZ     R13, 1
0x0081	0x2880      	GOTO       L_blinkLights8
0x0082	0x0BFC      	DECFSZ     R12, 1
0x0083	0x2880      	GOTO       L_blinkLights8
0x0084	0x0BFB      	DECFSZ     R11, 1
0x0085	0x2880      	GOTO       L_blinkLights8
;PartingShades.c,48 :: 		PORTA = 0x00;
0x0086	0x0185      	CLRF       PORTA
;PartingShades.c,49 :: 		delay_ms(flashDelay);
0x0087	0x3003      	MOVLW      3
0x0088	0x00FB      	MOVWF      R11
0x0089	0x3008      	MOVLW      8
0x008A	0x00FC      	MOVWF      R12
0x008B	0x3077      	MOVLW      119
0x008C	0x00FD      	MOVWF      R13
L_blinkLights9:
0x008D	0x0BFD      	DECFSZ     R13, 1
0x008E	0x288D      	GOTO       L_blinkLights9
0x008F	0x0BFC      	DECFSZ     R12, 1
0x0090	0x288D      	GOTO       L_blinkLights9
0x0091	0x0BFB      	DECFSZ     R11, 1
0x0092	0x288D      	GOTO       L_blinkLights9
;PartingShades.c,50 :: 		PORTA = 0xFF;
0x0093	0x30FF      	MOVLW      255
0x0094	0x0085      	MOVWF      PORTA
;PartingShades.c,51 :: 		delay_ms(flashDelay);
0x0095	0x3003      	MOVLW      3
0x0096	0x00FB      	MOVWF      R11
0x0097	0x3008      	MOVLW      8
0x0098	0x00FC      	MOVWF      R12
0x0099	0x3077      	MOVLW      119
0x009A	0x00FD      	MOVWF      R13
L_blinkLights10:
0x009B	0x0BFD      	DECFSZ     R13, 1
0x009C	0x289B      	GOTO       L_blinkLights10
0x009D	0x0BFC      	DECFSZ     R12, 1
0x009E	0x289B      	GOTO       L_blinkLights10
0x009F	0x0BFB      	DECFSZ     R11, 1
0x00A0	0x289B      	GOTO       L_blinkLights10
;PartingShades.c,52 :: 		PORTA = 0x00;
0x00A1	0x0185      	CLRF       PORTA
;PartingShades.c,53 :: 		}
L_end_blinkLights:
0x00A2	0x0008      	RETURN
; end of _blinkLights
_openShades:
;PartingShades.c,100 :: 		void openShades(long setTimeOut){
;PartingShades.c,101 :: 		long timeOut = 0;
0x00A3	0x1283      	BCF        STATUS, 5
0x00A4	0x1303      	BCF        STATUS, 6
0x00A5	0x01BE      	CLRF       openShades_timeOut_L0
0x00A6	0x01BF      	CLRF       openShades_timeOut_L0+1
0x00A7	0x01C0      	CLRF       openShades_timeOut_L0+2
0x00A8	0x01C1      	CLRF       openShades_timeOut_L0+3
;PartingShades.c,102 :: 		PORTA = 0b00000001; //turns on the motor
0x00A9	0x3001      	MOVLW      1
0x00AA	0x0085      	MOVWF      PORTA
;PartingShades.c,103 :: 		while(!(PORTC & 0b10000000) && (timeOut < setTimeOut)){
L_openShades30:
0x00AB	0x1B87      	BTFSC      PORTC, 7
0x00AC	0x28FD      	GOTO       L_openShades31
0x00AD	0x3080      	MOVLW      128
0x00AE	0x0641      	XORWF      openShades_timeOut_L0+3, 0
0x00AF	0x00F0      	MOVWF      R0
0x00B0	0x3080      	MOVLW      128
0x00B1	0x063D      	XORWF      FARG_openShades_setTimeOut+3, 0
0x00B2	0x0270      	SUBWF      R0, 0
0x00B3	0x1D03      	BTFSS      STATUS, 2
0x00B4	0x28BF      	GOTO       L__openShades95
0x00B5	0x083C      	MOVF       FARG_openShades_setTimeOut+2, 0
0x00B6	0x0240      	SUBWF      openShades_timeOut_L0+2, 0
0x00B7	0x1D03      	BTFSS      STATUS, 2
0x00B8	0x28BF      	GOTO       L__openShades95
0x00B9	0x083B      	MOVF       FARG_openShades_setTimeOut+1, 0
0x00BA	0x023F      	SUBWF      openShades_timeOut_L0+1, 0
0x00BB	0x1D03      	BTFSS      STATUS, 2
0x00BC	0x28BF      	GOTO       L__openShades95
0x00BD	0x083A      	MOVF       FARG_openShades_setTimeOut, 0
0x00BE	0x023E      	SUBWF      openShades_timeOut_L0, 0
L__openShades95:
0x00BF	0x1803      	BTFSC      STATUS, 0
0x00C0	0x28FD      	GOTO       L_openShades31
L__openShades84:
;PartingShades.c,104 :: 		delay_ms(300);
0x00C1	0x3004      	MOVLW      4
0x00C2	0x00FB      	MOVWF      R11
0x00C3	0x300C      	MOVLW      12
0x00C4	0x00FC      	MOVWF      R12
0x00C5	0x3033      	MOVLW      51
0x00C6	0x00FD      	MOVWF      R13
L_openShades34:
0x00C7	0x0BFD      	DECFSZ     R13, 1
0x00C8	0x28C7      	GOTO       L_openShades34
0x00C9	0x0BFC      	DECFSZ     R12, 1
0x00CA	0x28C7      	GOTO       L_openShades34
0x00CB	0x0BFB      	DECFSZ     R11, 1
0x00CC	0x28C7      	GOTO       L_openShades34
0x00CD	0x0000      	NOP
0x00CE	0x0000      	NOP
;PartingShades.c,109 :: 		if(PORTC & 0b00000001){
0x00CF	0x1C07      	BTFSS      PORTC, 0
0x00D0	0x28E5      	GOTO       L_openShades35
;PartingShades.c,110 :: 		delay_ms(50);  //debounce
0x00D1	0x3082      	MOVLW      130
0x00D2	0x00FC      	MOVWF      R12
0x00D3	0x30DD      	MOVLW      221
0x00D4	0x00FD      	MOVWF      R13
L_openShades36:
0x00D5	0x0BFD      	DECFSZ     R13, 1
0x00D6	0x28D5      	GOTO       L_openShades36
0x00D7	0x0BFC      	DECFSZ     R12, 1
0x00D8	0x28D5      	GOTO       L_openShades36
0x00D9	0x0000      	NOP
0x00DA	0x0000      	NOP
;PartingShades.c,111 :: 		if(PORTC & 0b00000001){
0x00DB	0x1C07      	BTFSS      PORTC, 0
0x00DC	0x28E5      	GOTO       L_openShades37
;PartingShades.c,113 :: 		timeOut=setTimeOut; //this will end the while loop early
0x00DD	0x083A      	MOVF       FARG_openShades_setTimeOut, 0
0x00DE	0x00BE      	MOVWF      openShades_timeOut_L0
0x00DF	0x083B      	MOVF       FARG_openShades_setTimeOut+1, 0
0x00E0	0x00BF      	MOVWF      openShades_timeOut_L0+1
0x00E1	0x083C      	MOVF       FARG_openShades_setTimeOut+2, 0
0x00E2	0x00C0      	MOVWF      openShades_timeOut_L0+2
0x00E3	0x083D      	MOVF       FARG_openShades_setTimeOut+3, 0
0x00E4	0x00C1      	MOVWF      openShades_timeOut_L0+3
;PartingShades.c,114 :: 		}
L_openShades37:
;PartingShades.c,115 :: 		}
L_openShades35:
;PartingShades.c,117 :: 		timeOut++;
0x00E5	0x083E      	MOVF       openShades_timeOut_L0, 0
0x00E6	0x00F0      	MOVWF      R0
0x00E7	0x083F      	MOVF       openShades_timeOut_L0+1, 0
0x00E8	0x00F1      	MOVWF      R0+1
0x00E9	0x0840      	MOVF       openShades_timeOut_L0+2, 0
0x00EA	0x00F2      	MOVWF      R0+2
0x00EB	0x0841      	MOVF       openShades_timeOut_L0+3, 0
0x00EC	0x00F3      	MOVWF      R0+3
0x00ED	0x0AF0      	INCF       R0, 1
0x00EE	0x1903      	BTFSC      STATUS, 2
0x00EF	0x0AF1      	INCF       R0+1, 1
0x00F0	0x1903      	BTFSC      STATUS, 2
0x00F1	0x0AF2      	INCF       R0+2, 1
0x00F2	0x1903      	BTFSC      STATUS, 2
0x00F3	0x0AF3      	INCF       R0+3, 1
0x00F4	0x0870      	MOVF       R0, 0
0x00F5	0x00BE      	MOVWF      openShades_timeOut_L0
0x00F6	0x0871      	MOVF       R0+1, 0
0x00F7	0x00BF      	MOVWF      openShades_timeOut_L0+1
0x00F8	0x0872      	MOVF       R0+2, 0
0x00F9	0x00C0      	MOVWF      openShades_timeOut_L0+2
0x00FA	0x0873      	MOVF       R0+3, 0
0x00FB	0x00C1      	MOVWF      openShades_timeOut_L0+3
;PartingShades.c,118 :: 		}
0x00FC	0x28AB      	GOTO       L_openShades30
L_openShades31:
;PartingShades.c,120 :: 		PORTA = 0x00;  // turn motor off because of time out or sensor triggered
0x00FD	0x0185      	CLRF       PORTA
;PartingShades.c,121 :: 		timeOut = 0;
0x00FE	0x01BE      	CLRF       openShades_timeOut_L0
0x00FF	0x01BF      	CLRF       openShades_timeOut_L0+1
0x0100	0x01C0      	CLRF       openShades_timeOut_L0+2
0x0101	0x01C1      	CLRF       openShades_timeOut_L0+3
;PartingShades.c,122 :: 		}
L_end_openShades:
0x0102	0x0008      	RETURN
; end of _openShades
_init_ports:
;PartingShades.c,10 :: 		void init_ports(void){
;PartingShades.c,11 :: 		OSCCON = 0x71;   //configures the internal oscillator
0x0103	0x3071      	MOVLW      113
0x0104	0x1683      	BSF        STATUS, 5
0x0105	0x1303      	BCF        STATUS, 6
0x0106	0x008F      	MOVWF      OSCCON
;PartingShades.c,12 :: 		ANSEL=0x00;        // Set inputs to digital
0x0107	0x1283      	BCF        STATUS, 5
0x0108	0x1703      	BSF        STATUS, 6
0x0109	0x019E      	CLRF       ANSEL
;PartingShades.c,13 :: 		ANSELH = 0x00;     //disables something that is holding pins RB5 and RB6
0x010A	0x019F      	CLRF       ANSELH
;PartingShades.c,14 :: 		CM1CON0 = 0x00;
0x010B	0x0199      	CLRF       CM1CON0
;PartingShades.c,15 :: 		CM2CON0 = 0x00;
0x010C	0x019A      	CLRF       CM2CON0
;PartingShades.c,16 :: 		IOCB = 0b00000000;
0x010D	0x0196      	CLRF       IOCB
;PartingShades.c,18 :: 		TRISA=0x00;        // port a is an output
0x010E	0x1683      	BSF        STATUS, 5
0x010F	0x1303      	BCF        STATUS, 6
0x0110	0x0185      	CLRF       TRISA
;PartingShades.c,20 :: 		PORTB = 0x00;
0x0111	0x1283      	BCF        STATUS, 5
0x0112	0x0186      	CLRF       PORTB
;PartingShades.c,21 :: 		TRISB=0xFF; //all of port B is an input... woot
0x0113	0x30FF      	MOVLW      255
0x0114	0x1683      	BSF        STATUS, 5
0x0115	0x0086      	MOVWF      TRISB
;PartingShades.c,22 :: 		PORTC = 0x00;
0x0116	0x1283      	BCF        STATUS, 5
0x0117	0x0187      	CLRF       PORTC
;PartingShades.c,23 :: 		TRISC=0b10000111; //pins 3-6 are output, 0-2, 7 are input
0x0118	0x3087      	MOVLW      135
0x0119	0x1683      	BSF        STATUS, 5
0x011A	0x0087      	MOVWF      TRISC
;PartingShades.c,25 :: 		PORTA = 0x00;
0x011B	0x1283      	BCF        STATUS, 5
0x011C	0x0185      	CLRF       PORTA
;PartingShades.c,26 :: 		}
L_end_init_ports:
0x011D	0x0008      	RETURN
; end of _init_ports
_getCommand:
;PartingShades.c,56 :: 		int *getCommand(void){
;PartingShades.c,59 :: 		long j = 0;
;PartingShades.c,60 :: 		int i = 0;
0x011E	0x1283      	BCF        STATUS, 5
0x011F	0x1303      	BCF        STATUS, 6
0x0120	0x01CC      	CLRF       getCommand_i_L0
0x0121	0x01CD      	CLRF       getCommand_i_L0+1
;PartingShades.c,66 :: 		for(i = 0; i < 9; i++ ){  //all 8 bits of data and the closing bracket. 9 total
0x0122	0x01CC      	CLRF       getCommand_i_L0
0x0123	0x01CD      	CLRF       getCommand_i_L0+1
L_getCommand11:
0x0124	0x3080      	MOVLW      128
0x0125	0x064D      	XORWF      getCommand_i_L0+1, 0
0x0126	0x00F0      	MOVWF      R0
0x0127	0x3080      	MOVLW      128
0x0128	0x0270      	SUBWF      R0, 0
0x0129	0x1D03      	BTFSS      STATUS, 2
0x012A	0x292D      	GOTO       L__getCommand89
0x012B	0x3009      	MOVLW      9
0x012C	0x024C      	SUBWF      getCommand_i_L0, 0
L__getCommand89:
0x012D	0x1803      	BTFSC      STATUS, 0
0x012E	0x2987      	GOTO       L_getCommand12
;PartingShades.c,67 :: 		while((!(PORTB & pulsePin))  ){ //  && (j < timeOut)){ // wait till pulse starts
L_getCommand14:
0x012F	0x1A86      	BTFSC      PORTB, 5
0x0130	0x2932      	GOTO       L_getCommand15
;PartingShades.c,69 :: 		}
0x0131	0x292F      	GOTO       L_getCommand14
L_getCommand15:
;PartingShades.c,70 :: 		delay_ms(1); //tiny delay to ensure we have good data before writing it
0x0132	0x3003      	MOVLW      3
0x0133	0x00FC      	MOVWF      R12
0x0134	0x3097      	MOVLW      151
0x0135	0x00FD      	MOVWF      R13
L_getCommand16:
0x0136	0x0BFD      	DECFSZ     R13, 1
0x0137	0x2936      	GOTO       L_getCommand16
0x0138	0x0BFC      	DECFSZ     R12, 1
0x0139	0x2936      	GOTO       L_getCommand16
0x013A	0x0000      	NOP
0x013B	0x0000      	NOP
;PartingShades.c,72 :: 		if( i < 8)
0x013C	0x3080      	MOVLW      128
0x013D	0x064D      	XORWF      getCommand_i_L0+1, 0
0x013E	0x00F0      	MOVWF      R0
0x013F	0x3080      	MOVLW      128
0x0140	0x0270      	SUBWF      R0, 0
0x0141	0x1D03      	BTFSS      STATUS, 2
0x0142	0x2945      	GOTO       L__getCommand90
0x0143	0x3008      	MOVLW      8
0x0144	0x024C      	SUBWF      getCommand_i_L0, 0
L__getCommand90:
0x0145	0x1803      	BTFSC      STATUS, 0
0x0146	0x295D      	GOTO       L_getCommand17
;PartingShades.c,73 :: 		commandTemp[i] = (PORTB & dataPin); // WRITE DATA
0x0147	0x084C      	MOVF       getCommand_i_L0, 0
0x0148	0x00F0      	MOVWF      R0
0x0149	0x084D      	MOVF       getCommand_i_L0+1, 0
0x014A	0x00F1      	MOVWF      R0+1
0x014B	0x0DF0      	RLF        R0, 1
0x014C	0x0DF1      	RLF        R0+1, 1
0x014D	0x1070      	BCF        R0, 0
0x014E	0x0870      	MOVF       R0, 0
0x014F	0x3E3A      	ADDLW      getCommand_commandTemp_L0
0x0150	0x0084      	MOVWF      FSR
0x0151	0x3010      	MOVLW      16
0x0152	0x0506      	ANDWF      PORTB, 0
0x0153	0x00F0      	MOVWF      R0
0x0154	0x3000      	MOVLW      0
0x0155	0x3900      	ANDLW      0
0x0156	0x00F1      	MOVWF      R0+1
0x0157	0x0870      	MOVF       R0, 0
0x0158	0x0080      	MOVWF      INDF
0x0159	0x0871      	MOVF       R0+1, 0
0x015A	0x0A84      	INCF       FSR, 1
0x015B	0x0080      	MOVWF      INDF
0x015C	0x2976      	GOTO       L_getCommand18
L_getCommand17:
;PartingShades.c,74 :: 		else if(i == 8)
0x015D	0x3000      	MOVLW      0
0x015E	0x064D      	XORWF      getCommand_i_L0+1, 0
0x015F	0x1D03      	BTFSS      STATUS, 2
0x0160	0x2963      	GOTO       L__getCommand91
0x0161	0x3008      	MOVLW      8
0x0162	0x064C      	XORWF      getCommand_i_L0, 0
L__getCommand91:
0x0163	0x1D03      	BTFSS      STATUS, 2
0x0164	0x2976      	GOTO       L_getCommand19
;PartingShades.c,75 :: 		commandTemp[i] = (PORTB & (dataPin + parityPin));  // closing bracket
0x0165	0x084C      	MOVF       getCommand_i_L0, 0
0x0166	0x00F0      	MOVWF      R0
0x0167	0x084D      	MOVF       getCommand_i_L0+1, 0
0x0168	0x00F1      	MOVWF      R0+1
0x0169	0x0DF0      	RLF        R0, 1
0x016A	0x0DF1      	RLF        R0+1, 1
0x016B	0x1070      	BCF        R0, 0
0x016C	0x0870      	MOVF       R0, 0
0x016D	0x3E3A      	ADDLW      getCommand_commandTemp_L0
0x016E	0x0084      	MOVWF      FSR
0x016F	0x3050      	MOVLW      80
0x0170	0x0506      	ANDWF      PORTB, 0
0x0171	0x00F0      	MOVWF      R0
0x0172	0x0870      	MOVF       R0, 0
0x0173	0x0080      	MOVWF      INDF
0x0174	0x0A84      	INCF       FSR, 1
0x0175	0x0180      	CLRF       INDF
L_getCommand19:
L_getCommand18:
;PartingShades.c,77 :: 		while((PORTB & pulsePin)  ){   //&& (j < timeOut)){ // wait till pulse is over
L_getCommand20:
0x0176	0x1E86      	BTFSS      PORTB, 5
0x0177	0x2979      	GOTO       L_getCommand21
;PartingShades.c,79 :: 		}
0x0178	0x2976      	GOTO       L_getCommand20
L_getCommand21:
;PartingShades.c,80 :: 		delay_ms(1); //tiny delay to ensure pulse is really over before starting again
0x0179	0x3003      	MOVLW      3
0x017A	0x00FC      	MOVWF      R12
0x017B	0x3097      	MOVLW      151
0x017C	0x00FD      	MOVWF      R13
L_getCommand22:
0x017D	0x0BFD      	DECFSZ     R13, 1
0x017E	0x297D      	GOTO       L_getCommand22
0x017F	0x0BFC      	DECFSZ     R12, 1
0x0180	0x297D      	GOTO       L_getCommand22
0x0181	0x0000      	NOP
0x0182	0x0000      	NOP
;PartingShades.c,66 :: 		for(i = 0; i < 9; i++ ){  //all 8 bits of data and the closing bracket. 9 total
0x0183	0x0ACC      	INCF       getCommand_i_L0, 1
0x0184	0x1903      	BTFSC      STATUS, 2
0x0185	0x0ACD      	INCF       getCommand_i_L0+1, 1
;PartingShades.c,84 :: 		}
0x0186	0x2924      	GOTO       L_getCommand11
L_getCommand12:
;PartingShades.c,86 :: 		if((commandTemp[8] == (dataPin + parityPin))   ){  // && (j < timeOut)){  //all went well
0x0187	0x3000      	MOVLW      0
0x0188	0x064B      	XORWF      getCommand_commandTemp_L0+17, 0
0x0189	0x1D03      	BTFSS      STATUS, 2
0x018A	0x298D      	GOTO       L__getCommand92
0x018B	0x3050      	MOVLW      80
0x018C	0x064A      	XORWF      getCommand_commandTemp_L0+16, 0
L__getCommand92:
0x018D	0x1D03      	BTFSS      STATUS, 2
0x018E	0x29BC      	GOTO       L_getCommand23
;PartingShades.c,87 :: 		for(i = 0; i < 8; i++) {                           //put temp into final array
0x018F	0x01CC      	CLRF       getCommand_i_L0
0x0190	0x01CD      	CLRF       getCommand_i_L0+1
L_getCommand24:
0x0191	0x3080      	MOVLW      128
0x0192	0x064D      	XORWF      getCommand_i_L0+1, 0
0x0193	0x00F0      	MOVWF      R0
0x0194	0x3080      	MOVLW      128
0x0195	0x0270      	SUBWF      R0, 0
0x0196	0x1D03      	BTFSS      STATUS, 2
0x0197	0x299A      	GOTO       L__getCommand93
0x0198	0x3008      	MOVLW      8
0x0199	0x024C      	SUBWF      getCommand_i_L0, 0
L__getCommand93:
0x019A	0x1803      	BTFSC      STATUS, 0
0x019B	0x29B9      	GOTO       L_getCommand25
;PartingShades.c,88 :: 		commandFinal[i] = commandTemp[i];
0x019C	0x084C      	MOVF       getCommand_i_L0, 0
0x019D	0x00F0      	MOVWF      R0
0x019E	0x084D      	MOVF       getCommand_i_L0+1, 0
0x019F	0x00F1      	MOVWF      R0+1
0x01A0	0x0DF0      	RLF        R0, 1
0x01A1	0x0DF1      	RLF        R0+1, 1
0x01A2	0x1070      	BCF        R0, 0
0x01A3	0x0870      	MOVF       R0, 0
0x01A4	0x3E22      	ADDLW      getCommand_commandFinal_L0
0x01A5	0x00F2      	MOVWF      R2
0x01A6	0x0870      	MOVF       R0, 0
0x01A7	0x3E3A      	ADDLW      getCommand_commandTemp_L0
0x01A8	0x0084      	MOVWF      FSR
0x01A9	0x0800      	MOVF       INDF, 0
0x01AA	0x00F0      	MOVWF      R0
0x01AB	0x0A84      	INCF       FSR, 1
0x01AC	0x0800      	MOVF       INDF, 0
0x01AD	0x00F1      	MOVWF      R0+1
0x01AE	0x0872      	MOVF       R2, 0
0x01AF	0x0084      	MOVWF      FSR
0x01B0	0x0870      	MOVF       R0, 0
0x01B1	0x0080      	MOVWF      INDF
0x01B2	0x0871      	MOVF       R0+1, 0
0x01B3	0x0A84      	INCF       FSR, 1
0x01B4	0x0080      	MOVWF      INDF
;PartingShades.c,87 :: 		for(i = 0; i < 8; i++) {                           //put temp into final array
0x01B5	0x0ACC      	INCF       getCommand_i_L0, 1
0x01B6	0x1903      	BTFSC      STATUS, 2
0x01B7	0x0ACD      	INCF       getCommand_i_L0+1, 1
;PartingShades.c,89 :: 		}
0x01B8	0x2991      	GOTO       L_getCommand24
L_getCommand25:
;PartingShades.c,91 :: 		return commandFinal;
0x01B9	0x3022      	MOVLW      getCommand_commandFinal_L0
0x01BA	0x00F0      	MOVWF      R0
0x01BB	0x29C4      	GOTO       L_end_getCommand
;PartingShades.c,92 :: 		}
L_getCommand23:
;PartingShades.c,94 :: 		blinkLights();
0x01BC	0x200A      	CALL       _blinkLights
;PartingShades.c,95 :: 		while(PORTB & 0b01110000);  // wait until port B is clean before continuing
L_getCommand28:
0x01BD	0x3070      	MOVLW      112
0x01BE	0x0506      	ANDWF      PORTB, 0
0x01BF	0x00F0      	MOVWF      R0
0x01C0	0x1903      	BTFSC      STATUS, 2
0x01C1	0x29C3      	GOTO       L_getCommand29
0x01C2	0x29BD      	GOTO       L_getCommand28
L_getCommand29:
;PartingShades.c,96 :: 		return 0;  //something is wrong
0x01C3	0x01F0      	CLRF       R0
;PartingShades.c,98 :: 		}
L_end_getCommand:
0x01C4	0x0008      	RETURN
; end of _getCommand
_sendStatus:
;PartingShades.c,147 :: 		void sendStatus(char shadeStatus){  // o = open, c = closed
;PartingShades.c,148 :: 		int i = 0;
0x01C5	0x1283      	BCF        STATUS, 5
0x01C6	0x1303      	BCF        STATUS, 6
0x01C7	0x01BB      	CLRF       sendStatus_i_L0
0x01C8	0x01BC      	CLRF       sendStatus_i_L0+1
;PartingShades.c,149 :: 		PORTB = 0x00;
0x01C9	0x0186      	CLRF       PORTB
;PartingShades.c,152 :: 		TRISB &= 0b10101111;// changes to output leaves pulse pin as an input
0x01CA	0x30AF      	MOVLW      175
0x01CB	0x1683      	BSF        STATUS, 5
0x01CC	0x0586      	ANDWF      TRISB, 1
;PartingShades.c,153 :: 		delay_ms(5);
0x01CD	0x300D      	MOVLW      13
0x01CE	0x00FC      	MOVWF      R12
0x01CF	0x30FB      	MOVLW      251
0x01D0	0x00FD      	MOVWF      R13
L_sendStatus46:
0x01D1	0x0BFD      	DECFSZ     R13, 1
0x01D2	0x29D1      	GOTO       L_sendStatus46
0x01D3	0x0BFC      	DECFSZ     R12, 1
0x01D4	0x29D1      	GOTO       L_sendStatus46
0x01D5	0x0000      	NOP
0x01D6	0x0000      	NOP
;PartingShades.c,154 :: 		PORTB |= (parityPin + dataPin); //stick out our thumb
0x01D7	0x3050      	MOVLW      80
0x01D8	0x1283      	BCF        STATUS, 5
0x01D9	0x0486      	IORWF      PORTB, 1
;PartingShades.c,155 :: 		delay_ms(1);
0x01DA	0x3003      	MOVLW      3
0x01DB	0x00FC      	MOVWF      R12
0x01DC	0x3097      	MOVLW      151
0x01DD	0x00FD      	MOVWF      R13
L_sendStatus47:
0x01DE	0x0BFD      	DECFSZ     R13, 1
0x01DF	0x29DE      	GOTO       L_sendStatus47
0x01E0	0x0BFC      	DECFSZ     R12, 1
0x01E1	0x29DE      	GOTO       L_sendStatus47
0x01E2	0x0000      	NOP
0x01E3	0x0000      	NOP
;PartingShades.c,158 :: 		while(!(PORTB & pulsePin));// ardi pulses when ready to listen
L_sendStatus48:
0x01E4	0x1A86      	BTFSC      PORTB, 5
0x01E5	0x29E7      	GOTO       L_sendStatus49
0x01E6	0x29E4      	GOTO       L_sendStatus48
L_sendStatus49:
;PartingShades.c,159 :: 		delay_ms(1);
0x01E7	0x3003      	MOVLW      3
0x01E8	0x00FC      	MOVWF      R12
0x01E9	0x3097      	MOVLW      151
0x01EA	0x00FD      	MOVWF      R13
L_sendStatus50:
0x01EB	0x0BFD      	DECFSZ     R13, 1
0x01EC	0x29EB      	GOTO       L_sendStatus50
0x01ED	0x0BFC      	DECFSZ     R12, 1
0x01EE	0x29EB      	GOTO       L_sendStatus50
0x01EF	0x0000      	NOP
0x01F0	0x0000      	NOP
;PartingShades.c,160 :: 		while(PORTB & pulsePin); //wait for pulse to end
L_sendStatus51:
0x01F1	0x1E86      	BTFSS      PORTB, 5
0x01F2	0x29F4      	GOTO       L_sendStatus52
0x01F3	0x29F1      	GOTO       L_sendStatus51
L_sendStatus52:
;PartingShades.c,161 :: 		delay_ms(5); //give ardi time to change dataDirection, usually real quick "1"
0x01F4	0x300D      	MOVLW      13
0x01F5	0x00FC      	MOVWF      R12
0x01F6	0x30FB      	MOVLW      251
0x01F7	0x00FD      	MOVWF      R13
L_sendStatus53:
0x01F8	0x0BFD      	DECFSZ     R13, 1
0x01F9	0x29F8      	GOTO       L_sendStatus53
0x01FA	0x0BFC      	DECFSZ     R12, 1
0x01FB	0x29F8      	GOTO       L_sendStatus53
0x01FC	0x0000      	NOP
0x01FD	0x0000      	NOP
;PartingShades.c,162 :: 		PORTB &= 0b10001111;
0x01FE	0x308F      	MOVLW      143
0x01FF	0x0586      	ANDWF      PORTB, 1
;PartingShades.c,163 :: 		delay_ms(1);
0x0200	0x3003      	MOVLW      3
0x0201	0x00FC      	MOVWF      R12
0x0202	0x3097      	MOVLW      151
0x0203	0x00FD      	MOVWF      R13
L_sendStatus54:
0x0204	0x0BFD      	DECFSZ     R13, 1
0x0205	0x2A04      	GOTO       L_sendStatus54
0x0206	0x0BFC      	DECFSZ     R12, 1
0x0207	0x2A04      	GOTO       L_sendStatus54
0x0208	0x0000      	NOP
0x0209	0x0000      	NOP
;PartingShades.c,164 :: 		TRISB &= 0b10001111; //puts pulse pin to output
0x020A	0x308F      	MOVLW      143
0x020B	0x1683      	BSF        STATUS, 5
0x020C	0x0586      	ANDWF      TRISB, 1
;PartingShades.c,167 :: 		if(shadeStatus == 'o'){  //0b11111111 is the open code
0x020D	0x1283      	BCF        STATUS, 5
0x020E	0x083A      	MOVF       FARG_sendStatus_shadeStatus, 0
0x020F	0x3A6F      	XORLW      111
0x0210	0x1D03      	BTFSS      STATUS, 2
0x0211	0x2A3C      	GOTO       L_sendStatus55
;PartingShades.c,168 :: 		for(i=0; i<8; i++){
0x0212	0x01BB      	CLRF       sendStatus_i_L0
0x0213	0x01BC      	CLRF       sendStatus_i_L0+1
L_sendStatus56:
0x0214	0x3080      	MOVLW      128
0x0215	0x063C      	XORWF      sendStatus_i_L0+1, 0
0x0216	0x00F0      	MOVWF      R0
0x0217	0x3080      	MOVLW      128
0x0218	0x0270      	SUBWF      R0, 0
0x0219	0x1D03      	BTFSS      STATUS, 2
0x021A	0x2A1D      	GOTO       L__sendStatus99
0x021B	0x3008      	MOVLW      8
0x021C	0x023B      	SUBWF      sendStatus_i_L0, 0
L__sendStatus99:
0x021D	0x1803      	BTFSC      STATUS, 0
0x021E	0x2A3B      	GOTO       L_sendStatus57
;PartingShades.c,170 :: 		PORTB |= dataPin;  //set one
0x021F	0x1606      	BSF        PORTB, 4
;PartingShades.c,171 :: 		PORTB |= pulsePin;
0x0220	0x1686      	BSF        PORTB, 5
;PartingShades.c,173 :: 		delay_ms(pulseDelay);
0x0221	0x3034      	MOVLW      52
0x0222	0x00FC      	MOVWF      R12
0x0223	0x30F1      	MOVLW      241
0x0224	0x00FD      	MOVWF      R13
L_sendStatus59:
0x0225	0x0BFD      	DECFSZ     R13, 1
0x0226	0x2A25      	GOTO       L_sendStatus59
0x0227	0x0BFC      	DECFSZ     R12, 1
0x0228	0x2A25      	GOTO       L_sendStatus59
0x0229	0x0000      	NOP
0x022A	0x0000      	NOP
;PartingShades.c,174 :: 		PORTB &= 0b10001111;  //clears comm pins
0x022B	0x308F      	MOVLW      143
0x022C	0x0586      	ANDWF      PORTB, 1
;PartingShades.c,175 :: 		delay_ms(pulseDelay);
0x022D	0x3034      	MOVLW      52
0x022E	0x00FC      	MOVWF      R12
0x022F	0x30F1      	MOVLW      241
0x0230	0x00FD      	MOVWF      R13
L_sendStatus60:
0x0231	0x0BFD      	DECFSZ     R13, 1
0x0232	0x2A31      	GOTO       L_sendStatus60
0x0233	0x0BFC      	DECFSZ     R12, 1
0x0234	0x2A31      	GOTO       L_sendStatus60
0x0235	0x0000      	NOP
0x0236	0x0000      	NOP
;PartingShades.c,168 :: 		for(i=0; i<8; i++){
0x0237	0x0ABB      	INCF       sendStatus_i_L0, 1
0x0238	0x1903      	BTFSC      STATUS, 2
0x0239	0x0ABC      	INCF       sendStatus_i_L0+1, 1
;PartingShades.c,176 :: 		}
0x023A	0x2A14      	GOTO       L_sendStatus56
L_sendStatus57:
;PartingShades.c,177 :: 		}
0x023B	0x2A68      	GOTO       L_sendStatus61
L_sendStatus55:
;PartingShades.c,178 :: 		else if(shadeStatus == 'c'){  //0b00000000 is the close code
0x023C	0x083A      	MOVF       FARG_sendStatus_shadeStatus, 0
0x023D	0x3A63      	XORLW      99
0x023E	0x1D03      	BTFSS      STATUS, 2
0x023F	0x2A68      	GOTO       L_sendStatus62
;PartingShades.c,179 :: 		for(i=0; i<8; i++){
0x0240	0x01BB      	CLRF       sendStatus_i_L0
0x0241	0x01BC      	CLRF       sendStatus_i_L0+1
L_sendStatus63:
0x0242	0x3080      	MOVLW      128
0x0243	0x063C      	XORWF      sendStatus_i_L0+1, 0
0x0244	0x00F0      	MOVWF      R0
0x0245	0x3080      	MOVLW      128
0x0246	0x0270      	SUBWF      R0, 0
0x0247	0x1D03      	BTFSS      STATUS, 2
0x0248	0x2A4B      	GOTO       L__sendStatus100
0x0249	0x3008      	MOVLW      8
0x024A	0x023B      	SUBWF      sendStatus_i_L0, 0
L__sendStatus100:
0x024B	0x1803      	BTFSC      STATUS, 0
0x024C	0x2A68      	GOTO       L_sendStatus64
;PartingShades.c,181 :: 		PORTB |= 0x00; //sets zero
;PartingShades.c,182 :: 		PORTB |= pulsePin;
0x024D	0x1686      	BSF        PORTB, 5
;PartingShades.c,184 :: 		delay_ms(pulseDelay);
0x024E	0x3034      	MOVLW      52
0x024F	0x00FC      	MOVWF      R12
0x0250	0x30F1      	MOVLW      241
0x0251	0x00FD      	MOVWF      R13
L_sendStatus66:
0x0252	0x0BFD      	DECFSZ     R13, 1
0x0253	0x2A52      	GOTO       L_sendStatus66
0x0254	0x0BFC      	DECFSZ     R12, 1
0x0255	0x2A52      	GOTO       L_sendStatus66
0x0256	0x0000      	NOP
0x0257	0x0000      	NOP
;PartingShades.c,185 :: 		PORTB &= 0b10001111;  //clears comm pins
0x0258	0x308F      	MOVLW      143
0x0259	0x0586      	ANDWF      PORTB, 1
;PartingShades.c,186 :: 		delay_ms(pulseDelay);
0x025A	0x3034      	MOVLW      52
0x025B	0x00FC      	MOVWF      R12
0x025C	0x30F1      	MOVLW      241
0x025D	0x00FD      	MOVWF      R13
L_sendStatus67:
0x025E	0x0BFD      	DECFSZ     R13, 1
0x025F	0x2A5E      	GOTO       L_sendStatus67
0x0260	0x0BFC      	DECFSZ     R12, 1
0x0261	0x2A5E      	GOTO       L_sendStatus67
0x0262	0x0000      	NOP
0x0263	0x0000      	NOP
;PartingShades.c,179 :: 		for(i=0; i<8; i++){
0x0264	0x0ABB      	INCF       sendStatus_i_L0, 1
0x0265	0x1903      	BTFSC      STATUS, 2
0x0266	0x0ABC      	INCF       sendStatus_i_L0+1, 1
;PartingShades.c,187 :: 		}
0x0267	0x2A42      	GOTO       L_sendStatus63
L_sendStatus64:
;PartingShades.c,188 :: 		}
L_sendStatus62:
L_sendStatus61:
;PartingShades.c,190 :: 		PORTB |= 0b01010000;
0x0268	0x3050      	MOVLW      80
0x0269	0x0486      	IORWF      PORTB, 1
;PartingShades.c,191 :: 		PORTB |= pulsePin;
0x026A	0x1686      	BSF        PORTB, 5
;PartingShades.c,192 :: 		delay_ms(pulseDelay);
0x026B	0x3034      	MOVLW      52
0x026C	0x00FC      	MOVWF      R12
0x026D	0x30F1      	MOVLW      241
0x026E	0x00FD      	MOVWF      R13
L_sendStatus68:
0x026F	0x0BFD      	DECFSZ     R13, 1
0x0270	0x2A6F      	GOTO       L_sendStatus68
0x0271	0x0BFC      	DECFSZ     R12, 1
0x0272	0x2A6F      	GOTO       L_sendStatus68
0x0273	0x0000      	NOP
0x0274	0x0000      	NOP
;PartingShades.c,193 :: 		PORTB &= 0b10001111; //clear comm pins
0x0275	0x308F      	MOVLW      143
0x0276	0x0586      	ANDWF      PORTB, 1
;PartingShades.c,194 :: 		TRISB = 0xFF;
0x0277	0x30FF      	MOVLW      255
0x0278	0x1683      	BSF        STATUS, 5
0x0279	0x0086      	MOVWF      TRISB
;PartingShades.c,195 :: 		return;
;PartingShades.c,196 :: 		}
L_end_sendStatus:
0x027A	0x0008      	RETURN
; end of _sendStatus
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x027B	0x2003      	CALL       _____DoICP
0x027C	0x118A      	BCF        PCLATH, 3
0x027D	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x027E	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x027F	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0280	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0281	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0282	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0283	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0284	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0285	0x2A7B      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0286	0x0008      	RETURN
; end of ___CC2DW
_closeShades:
;PartingShades.c,124 :: 		void closeShades(long setTimeOut){
;PartingShades.c,125 :: 		long timeOut = 0;
0x0287	0x1283      	BCF        STATUS, 5
0x0288	0x1303      	BCF        STATUS, 6
0x0289	0x01BE      	CLRF       closeShades_timeOut_L0
0x028A	0x01BF      	CLRF       closeShades_timeOut_L0+1
0x028B	0x01C0      	CLRF       closeShades_timeOut_L0+2
0x028C	0x01C1      	CLRF       closeShades_timeOut_L0+3
;PartingShades.c,126 :: 		PORTA = 0b00000010;
0x028D	0x3002      	MOVLW      2
0x028E	0x0085      	MOVWF      PORTA
;PartingShades.c,127 :: 		while(!(PORTB & 0b10000000) && (timeOut < setTimeOut)){
L_closeShades38:
0x028F	0x1B86      	BTFSC      PORTB, 7
0x0290	0x2AE1      	GOTO       L_closeShades39
0x0291	0x3080      	MOVLW      128
0x0292	0x0641      	XORWF      closeShades_timeOut_L0+3, 0
0x0293	0x00F0      	MOVWF      R0
0x0294	0x3080      	MOVLW      128
0x0295	0x063D      	XORWF      FARG_closeShades_setTimeOut+3, 0
0x0296	0x0270      	SUBWF      R0, 0
0x0297	0x1D03      	BTFSS      STATUS, 2
0x0298	0x2AA3      	GOTO       L__closeShades97
0x0299	0x083C      	MOVF       FARG_closeShades_setTimeOut+2, 0
0x029A	0x0240      	SUBWF      closeShades_timeOut_L0+2, 0
0x029B	0x1D03      	BTFSS      STATUS, 2
0x029C	0x2AA3      	GOTO       L__closeShades97
0x029D	0x083B      	MOVF       FARG_closeShades_setTimeOut+1, 0
0x029E	0x023F      	SUBWF      closeShades_timeOut_L0+1, 0
0x029F	0x1D03      	BTFSS      STATUS, 2
0x02A0	0x2AA3      	GOTO       L__closeShades97
0x02A1	0x083A      	MOVF       FARG_closeShades_setTimeOut, 0
0x02A2	0x023E      	SUBWF      closeShades_timeOut_L0, 0
L__closeShades97:
0x02A3	0x1803      	BTFSC      STATUS, 0
0x02A4	0x2AE1      	GOTO       L_closeShades39
L__closeShades85:
;PartingShades.c,128 :: 		delay_ms(300);
0x02A5	0x3004      	MOVLW      4
0x02A6	0x00FB      	MOVWF      R11
0x02A7	0x300C      	MOVLW      12
0x02A8	0x00FC      	MOVWF      R12
0x02A9	0x3033      	MOVLW      51
0x02AA	0x00FD      	MOVWF      R13
L_closeShades42:
0x02AB	0x0BFD      	DECFSZ     R13, 1
0x02AC	0x2AAB      	GOTO       L_closeShades42
0x02AD	0x0BFC      	DECFSZ     R12, 1
0x02AE	0x2AAB      	GOTO       L_closeShades42
0x02AF	0x0BFB      	DECFSZ     R11, 1
0x02B0	0x2AAB      	GOTO       L_closeShades42
0x02B1	0x0000      	NOP
0x02B2	0x0000      	NOP
;PartingShades.c,133 :: 		if(PORTC & 0b00000001){
0x02B3	0x1C07      	BTFSS      PORTC, 0
0x02B4	0x2AC9      	GOTO       L_closeShades43
;PartingShades.c,134 :: 		delay_ms(50);  //debounce
0x02B5	0x3082      	MOVLW      130
0x02B6	0x00FC      	MOVWF      R12
0x02B7	0x30DD      	MOVLW      221
0x02B8	0x00FD      	MOVWF      R13
L_closeShades44:
0x02B9	0x0BFD      	DECFSZ     R13, 1
0x02BA	0x2AB9      	GOTO       L_closeShades44
0x02BB	0x0BFC      	DECFSZ     R12, 1
0x02BC	0x2AB9      	GOTO       L_closeShades44
0x02BD	0x0000      	NOP
0x02BE	0x0000      	NOP
;PartingShades.c,135 :: 		if(PORTC & 0b00000001){
0x02BF	0x1C07      	BTFSS      PORTC, 0
0x02C0	0x2AC9      	GOTO       L_closeShades45
;PartingShades.c,137 :: 		timeOut=setTimeOut; //this will end the while loop early
0x02C1	0x083A      	MOVF       FARG_closeShades_setTimeOut, 0
0x02C2	0x00BE      	MOVWF      closeShades_timeOut_L0
0x02C3	0x083B      	MOVF       FARG_closeShades_setTimeOut+1, 0
0x02C4	0x00BF      	MOVWF      closeShades_timeOut_L0+1
0x02C5	0x083C      	MOVF       FARG_closeShades_setTimeOut+2, 0
0x02C6	0x00C0      	MOVWF      closeShades_timeOut_L0+2
0x02C7	0x083D      	MOVF       FARG_closeShades_setTimeOut+3, 0
0x02C8	0x00C1      	MOVWF      closeShades_timeOut_L0+3
;PartingShades.c,138 :: 		}
L_closeShades45:
;PartingShades.c,139 :: 		}
L_closeShades43:
;PartingShades.c,141 :: 		timeOut++;
0x02C9	0x083E      	MOVF       closeShades_timeOut_L0, 0
0x02CA	0x00F0      	MOVWF      R0
0x02CB	0x083F      	MOVF       closeShades_timeOut_L0+1, 0
0x02CC	0x00F1      	MOVWF      R0+1
0x02CD	0x0840      	MOVF       closeShades_timeOut_L0+2, 0
0x02CE	0x00F2      	MOVWF      R0+2
0x02CF	0x0841      	MOVF       closeShades_timeOut_L0+3, 0
0x02D0	0x00F3      	MOVWF      R0+3
0x02D1	0x0AF0      	INCF       R0, 1
0x02D2	0x1903      	BTFSC      STATUS, 2
0x02D3	0x0AF1      	INCF       R0+1, 1
0x02D4	0x1903      	BTFSC      STATUS, 2
0x02D5	0x0AF2      	INCF       R0+2, 1
0x02D6	0x1903      	BTFSC      STATUS, 2
0x02D7	0x0AF3      	INCF       R0+3, 1
0x02D8	0x0870      	MOVF       R0, 0
0x02D9	0x00BE      	MOVWF      closeShades_timeOut_L0
0x02DA	0x0871      	MOVF       R0+1, 0
0x02DB	0x00BF      	MOVWF      closeShades_timeOut_L0+1
0x02DC	0x0872      	MOVF       R0+2, 0
0x02DD	0x00C0      	MOVWF      closeShades_timeOut_L0+2
0x02DE	0x0873      	MOVF       R0+3, 0
0x02DF	0x00C1      	MOVWF      closeShades_timeOut_L0+3
;PartingShades.c,142 :: 		}
0x02E0	0x2A8F      	GOTO       L_closeShades38
L_closeShades39:
;PartingShades.c,143 :: 		PORTA = 0x00; // turn motor off becuase of time out or sensor triggered
0x02E1	0x0185      	CLRF       PORTA
;PartingShades.c,144 :: 		timeOut = 0;
0x02E2	0x01BE      	CLRF       closeShades_timeOut_L0
0x02E3	0x01BF      	CLRF       closeShades_timeOut_L0+1
0x02E4	0x01C0      	CLRF       closeShades_timeOut_L0+2
0x02E5	0x01C1      	CLRF       closeShades_timeOut_L0+3
;PartingShades.c,145 :: 		}
L_end_closeShades:
0x02E6	0x0008      	RETURN
; end of _closeShades
_main:
;PartingShades.c,199 :: 		main(){
;PartingShades.c,200 :: 		long timeOut = 0;
;PartingShades.c,202 :: 		long setTimeOut = 1000000; //default 1000000
0x02E7	0x3040      	MOVLW      64
0x02E8	0x1283      	BCF        STATUS, 5
0x02E9	0x1303      	BCF        STATUS, 6
0x02EA	0x00B5      	MOVWF      main_setTimeOut_L0
0x02EB	0x3042      	MOVLW      66
0x02EC	0x00B6      	MOVWF      main_setTimeOut_L0+1
0x02ED	0x300F      	MOVLW      15
0x02EE	0x00B7      	MOVWF      main_setTimeOut_L0+2
0x02EF	0x3000      	MOVLW      0
0x02F0	0x00B8      	MOVWF      main_setTimeOut_L0+3
0x02F1	0x3063      	MOVLW      99
0x02F2	0x00B9      	MOVWF      main_currentSetting_L0
;PartingShades.c,208 :: 		init_ports();
0x02F3	0x2103      	CALL       _init_ports
;PartingShades.c,211 :: 		while(1){
L_main69:
;PartingShades.c,213 :: 		if((PORTB & 0b01110000) == (dataPin + parityPin)){ //initialization bracket
0x02F4	0x3070      	MOVLW      112
0x02F5	0x0506      	ANDWF      PORTB, 0
0x02F6	0x00F1      	MOVWF      R1
0x02F7	0x0871      	MOVF       R1, 0
0x02F8	0x3A50      	XORLW      80
0x02F9	0x1D03      	BTFSS      STATUS, 2
0x02FA	0x2B3B      	GOTO       L_main71
;PartingShades.c,214 :: 		currentCommand = getCommand();
0x02FB	0x211E      	CALL       _getCommand
0x02FC	0x0870      	MOVF       R0, 0
0x02FD	0x00B4      	MOVWF      main_currentCommand_L0
;PartingShades.c,230 :: 		if (*currentCommand == dataPin){   //if its 0b00000001
0x02FE	0x0870      	MOVF       R0, 0
0x02FF	0x0084      	MOVWF      FSR
0x0300	0x0800      	MOVF       INDF, 0
0x0301	0x00F1      	MOVWF      R1
0x0302	0x0A84      	INCF       FSR, 1
0x0303	0x0800      	MOVF       INDF, 0
0x0304	0x00F2      	MOVWF      R1+1
0x0305	0x0872      	MOVF       R1+1, 0
0x0306	0x3A00      	XORLW      0
0x0307	0x1D03      	BTFSS      STATUS, 2
0x0308	0x2B0B      	GOTO       L__main102
0x0309	0x3010      	MOVLW      16
0x030A	0x0671      	XORWF      R1, 0
L__main102:
0x030B	0x1D03      	BTFSS      STATUS, 2
0x030C	0x2B19      	GOTO       L_main72
;PartingShades.c,231 :: 		openShades(setTimeOut); //Pin RA0 trips "open" relay
0x030D	0x0835      	MOVF       main_setTimeOut_L0, 0
0x030E	0x00BA      	MOVWF      FARG_openShades_setTimeOut
0x030F	0x0836      	MOVF       main_setTimeOut_L0+1, 0
0x0310	0x00BB      	MOVWF      FARG_openShades_setTimeOut+1
0x0311	0x0837      	MOVF       main_setTimeOut_L0+2, 0
0x0312	0x00BC      	MOVWF      FARG_openShades_setTimeOut+2
0x0313	0x0838      	MOVF       main_setTimeOut_L0+3, 0
0x0314	0x00BD      	MOVWF      FARG_openShades_setTimeOut+3
0x0315	0x20A3      	CALL       _openShades
;PartingShades.c,232 :: 		currentSetting = 'o';
0x0316	0x306F      	MOVLW      111
0x0317	0x00B9      	MOVWF      main_currentSetting_L0
;PartingShades.c,233 :: 		}
0x0318	0x2B34      	GOTO       L_main73
L_main72:
;PartingShades.c,234 :: 		else if(*(currentCommand +1) == 0x00){ //0b00000000
0x0319	0x3002      	MOVLW      2
0x031A	0x0734      	ADDWF      main_currentCommand_L0, 0
0x031B	0x0084      	MOVWF      FSR
0x031C	0x0800      	MOVF       INDF, 0
0x031D	0x00F1      	MOVWF      R1
0x031E	0x0A84      	INCF       FSR, 1
0x031F	0x0800      	MOVF       INDF, 0
0x0320	0x00F2      	MOVWF      R1+1
0x0321	0x3000      	MOVLW      0
0x0322	0x0672      	XORWF      R1+1, 0
0x0323	0x1D03      	BTFSS      STATUS, 2
0x0324	0x2B27      	GOTO       L__main103
0x0325	0x3000      	MOVLW      0
0x0326	0x0671      	XORWF      R1, 0
L__main103:
0x0327	0x1D03      	BTFSS      STATUS, 2
0x0328	0x2B34      	GOTO       L_main74
;PartingShades.c,235 :: 		closeShades(setTimeOut); //Pin RA1 trips "close" relay
0x0329	0x0835      	MOVF       main_setTimeOut_L0, 0
0x032A	0x00BA      	MOVWF      FARG_closeShades_setTimeOut
0x032B	0x0836      	MOVF       main_setTimeOut_L0+1, 0
0x032C	0x00BB      	MOVWF      FARG_closeShades_setTimeOut+1
0x032D	0x0837      	MOVF       main_setTimeOut_L0+2, 0
0x032E	0x00BC      	MOVWF      FARG_closeShades_setTimeOut+2
0x032F	0x0838      	MOVF       main_setTimeOut_L0+3, 0
0x0330	0x00BD      	MOVWF      FARG_closeShades_setTimeOut+3
0x0331	0x2287      	CALL       _closeShades
;PartingShades.c,236 :: 		currentSetting = 'c';
0x0332	0x3063      	MOVLW      99
0x0333	0x00B9      	MOVWF      main_currentSetting_L0
;PartingShades.c,237 :: 		}
L_main74:
L_main73:
;PartingShades.c,238 :: 		while(PORTB & 0b01110000);  // wait until port B is clean before continuing
L_main75:
0x0334	0x3070      	MOVLW      112
0x0335	0x0506      	ANDWF      PORTB, 0
0x0336	0x00F0      	MOVWF      R0
0x0337	0x1903      	BTFSC      STATUS, 2
0x0338	0x2B3A      	GOTO       L_main76
0x0339	0x2B34      	GOTO       L_main75
L_main76:
;PartingShades.c,239 :: 		}
0x033A	0x2B70      	GOTO       L_main77
L_main71:
;PartingShades.c,241 :: 		else if(PORTC & 0b00000001){  //the button on the console
0x033B	0x1C07      	BTFSS      PORTC, 0
0x033C	0x2B70      	GOTO       L_main78
;PartingShades.c,242 :: 		delay_ms(1); //debounce
0x033D	0x3003      	MOVLW      3
0x033E	0x00FC      	MOVWF      R12
0x033F	0x3097      	MOVLW      151
0x0340	0x00FD      	MOVWF      R13
L_main79:
0x0341	0x0BFD      	DECFSZ     R13, 1
0x0342	0x2B41      	GOTO       L_main79
0x0343	0x0BFC      	DECFSZ     R12, 1
0x0344	0x2B41      	GOTO       L_main79
0x0345	0x0000      	NOP
0x0346	0x0000      	NOP
;PartingShades.c,243 :: 		if(PORTC & 0b00000001){  // OPEN THE SHADES
0x0347	0x1C07      	BTFSS      PORTC, 0
0x0348	0x2B70      	GOTO       L_main80
;PartingShades.c,244 :: 		if(currentSetting == 'c'){
0x0349	0x0839      	MOVF       main_currentSetting_L0, 0
0x034A	0x3A63      	XORLW      99
0x034B	0x1D03      	BTFSS      STATUS, 2
0x034C	0x2B5D      	GOTO       L_main81
;PartingShades.c,245 :: 		openShades(setTimeOut);
0x034D	0x0835      	MOVF       main_setTimeOut_L0, 0
0x034E	0x00BA      	MOVWF      FARG_openShades_setTimeOut
0x034F	0x0836      	MOVF       main_setTimeOut_L0+1, 0
0x0350	0x00BB      	MOVWF      FARG_openShades_setTimeOut+1
0x0351	0x0837      	MOVF       main_setTimeOut_L0+2, 0
0x0352	0x00BC      	MOVWF      FARG_openShades_setTimeOut+2
0x0353	0x0838      	MOVF       main_setTimeOut_L0+3, 0
0x0354	0x00BD      	MOVWF      FARG_openShades_setTimeOut+3
0x0355	0x20A3      	CALL       _openShades
;PartingShades.c,246 :: 		sendStatus('o');
0x0356	0x306F      	MOVLW      111
0x0357	0x00BA      	MOVWF      FARG_sendStatus_shadeStatus
0x0358	0x21C5      	CALL       _sendStatus
;PartingShades.c,247 :: 		currentSetting = 'o';
0x0359	0x306F      	MOVLW      111
0x035A	0x1283      	BCF        STATUS, 5
0x035B	0x00B9      	MOVWF      main_currentSetting_L0
;PartingShades.c,248 :: 		}
0x035C	0x2B70      	GOTO       L_main82
L_main81:
;PartingShades.c,249 :: 		else if(currentSetting =='o'){
0x035D	0x0839      	MOVF       main_currentSetting_L0, 0
0x035E	0x3A6F      	XORLW      111
0x035F	0x1D03      	BTFSS      STATUS, 2
0x0360	0x2B70      	GOTO       L_main83
;PartingShades.c,250 :: 		closeShades(setTimeOut);
0x0361	0x0835      	MOVF       main_setTimeOut_L0, 0
0x0362	0x00BA      	MOVWF      FARG_closeShades_setTimeOut
0x0363	0x0836      	MOVF       main_setTimeOut_L0+1, 0
0x0364	0x00BB      	MOVWF      FARG_closeShades_setTimeOut+1
0x0365	0x0837      	MOVF       main_setTimeOut_L0+2, 0
0x0366	0x00BC      	MOVWF      FARG_closeShades_setTimeOut+2
0x0367	0x0838      	MOVF       main_setTimeOut_L0+3, 0
0x0368	0x00BD      	MOVWF      FARG_closeShades_setTimeOut+3
0x0369	0x2287      	CALL       _closeShades
;PartingShades.c,251 :: 		sendStatus('c');
0x036A	0x3063      	MOVLW      99
0x036B	0x00BA      	MOVWF      FARG_sendStatus_shadeStatus
0x036C	0x21C5      	CALL       _sendStatus
;PartingShades.c,252 :: 		currentSetting = 'c';
0x036D	0x3063      	MOVLW      99
0x036E	0x1283      	BCF        STATUS, 5
0x036F	0x00B9      	MOVWF      main_currentSetting_L0
;PartingShades.c,253 :: 		}
L_main83:
L_main82:
;PartingShades.c,254 :: 		}
L_main80:
;PartingShades.c,255 :: 		}
L_main78:
L_main77:
;PartingShades.c,256 :: 		}
0x0370	0x2AF4      	GOTO       L_main69
;PartingShades.c,257 :: 		}
L_end_main:
0x0371	0x2B71      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A     [153]    _blinkLights
0x00A3      [96]    _openShades
0x0103      [27]    _init_ports
0x011E     [167]    _getCommand
0x01C5     [182]    _sendStatus
0x027B      [12]    ___CC2DW
0x0287      [96]    _closeShades
0x02E7     [139]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x0020       [2]    ___DoICPAddr
0x0022      [18]    getCommand_commandFinal_L0
0x0034       [1]    main_currentCommand_L0
0x0035       [4]    main_setTimeOut_L0
0x0039       [1]    main_currentSetting_L0
0x003A       [1]    FARG_sendStatus_shadeStatus
0x003A       [4]    FARG_openShades_setTimeOut
0x003A      [18]    getCommand_commandTemp_L0
0x003A       [4]    FARG_closeShades_setTimeOut
0x003B       [2]    sendStatus_i_L0
0x003E       [4]    openShades_timeOut_L0
0x003E       [4]    closeShades_timeOut_L0
0x004C       [2]    getCommand_i_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x008F       [1]    OSCCON
0x0116       [1]    IOCB
0x0119       [1]    CM1CON0
0x011A       [1]    CM2CON0
0x011E       [1]    ANSEL
0x011F       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_blinkLights0
  L_blinkLights1
  L_blinkLights2
  L_blinkLights3
  L_blinkLights4
  L_blinkLights5
  L_blinkLights6
  L_blinkLights7
  L_blinkLights8
  L_blinkLights9
  L_blinkLights10
  L_getCommand11
  L_getCommand12
  L_getCommand13
  L_getCommand14
  L_getCommand15
  L_getCommand16
  L_getCommand17
  L_getCommand18
  L_getCommand19
  L_getCommand20
  L_getCommand21
  L_getCommand22
  L_getCommand23
  L_getCommand24
  L_getCommand25
  L_getCommand26
  L_getCommand27
  L_getCommand28
  L_getCommand29
  L_openShades30
  L_openShades31
  L_openShades32
  L_openShades33
  L_openShades34
  L_openShades35
  L_openShades36
  L_openShades37
  L_closeShades38
  L_closeShades39
  L_closeShades40
  L_closeShades41
  L_closeShades42
  L_closeShades43
  L_closeShades44
  L_closeShades45
  L_sendStatus46
  L_sendStatus47
  L_sendStatus48
  L_sendStatus49
  L_sendStatus50
  L_sendStatus51
  L_sendStatus52
  L_sendStatus53
  L_sendStatus54
  L_sendStatus55
  L_sendStatus56
  L_sendStatus57
  L_sendStatus58
  L_sendStatus59
  L_sendStatus60
  L_sendStatus61
  L_sendStatus62
  L_sendStatus63
  L_sendStatus64
  L_sendStatus65
  L_sendStatus66
  L_sendStatus67
  L_sendStatus68
  L_main69
  L_main70
  L_main71
  L_main72
  L_main73
  L_main74
  L_main75
  L_main76
  L_main77
  L_main78
  L_main79
  L_main80
  L_main81
  L_main82
  L_main83
  L__openShades84
  L__closeShades85
  L_end_init_ports
  _init_ports
  L_end_blinkLights
  _blinkLights
  L_end_getCommand
  _getCommand
  L__getCommand89
  L__getCommand90
  L__getCommand91
  L__getCommand92
  L__getCommand93
  L_end_openShades
  _openShades
  L__openShades95
  L_end_closeShades
  _closeShades
  L__closeShades97
  L_end_sendStatus
  _sendStatus
  L__sendStatus99
  L__sendStatus100
  L_end_main
  _main
  L__main102
  L__main103
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
